name: Build and Test
on:
  push:
  workflow_dispatch:
  workflow_call:
  
jobs:
  test-dotnet:
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout
        uses: actions/checkout@v3
#        with:
#            token: ${{ secrets.CICD_RELEASES_PAT }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
            dotnet-version: '7.0.x'

      - name: Build
        run: dotnet build

      - name: Start Vault and run tests.
        run: |
          shopt -s expand_aliases
          . .env
          docker run --init --rm -d \
            --name pvault-dev \
            --add-host='host.docker.internal:host-gateway' \
            -p 8123:8123 \
            -e PVAULT_SERVICE_LICENSE=${PVAULT_SERVICE_LICENSE} \
            -e PVAULT_SENTRY_ENABLE=false \
            -e PVAULT_LOG_DATADOG_ENABLE=none \
            piiano/pvault-dev:${VAULT_VERSION}
          
          alias pvault="docker run --rm -i --add-host='host.docker.internal:host-gateway' -v $(pwd):/pwd -w /pwd piiano/pvault-cli:latest"
          until pvault status > /dev/null 2>&1
          do echo "Waiting for the vault to start ..." && sleep 1; done

          dotnet test
        env:
          PVAULT_SERVICE_LICENSE: ${{ secrets.PVAULT_SERVICE_LICENSE }}

      - name: Stop Vault.
        run: docker stop pvault-dev
